{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport HomeView from '../views/Manager.vue';\nimport User from \"@/views/User.vue\";\nimport Home from \"@/views/Home.vue\";\nimport login from \"@/views/Login.vue\";\nimport register from \"@/views/Register.vue\";\nimport Person from \"@/views/Person.vue\";\nimport FilePage from \"@/views/FilePage.vue\";\nimport Role from \"@/views/Role.vue\";\nimport { Menu } from \"element-ui\";\nimport MenuManager from \"@/views/MenuManager.vue\";\nimport UpdatePwd from \"@/views/UpdatePwd.vue\";\nVue.use(VueRouter);\nconst routes = [{\n  path: '/about',\n  name: 'about',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"about\" */'../views/AboutView.vue')\n}, {\n  path: '/login',\n  name: 'login',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: login\n}, {\n  path: '/register',\n  name: 'register',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: register\n}, {\n  path: '/404',\n  name: '404',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"about\" */'../views/404.vue')\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\nexport const resetRouter = () => {\n  router.matcher = new VueRouter({\n    mode: 'history',\n    base: process.env.BASE_URL,\n    routes\n  });\n};\n\n//刷新页面会重置路由\nexport const setRouters = () => {\n  const curRoutes = router.getRoutes().map(v => v.name);\n  if (curRoutes.includes(\"Manage\")) {\n    return;\n  }\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  console.log(user && user.menus + \"setRouters \");\n  if (user && user.menus.length > 0) {\n    const manageRoute = {\n      path: '/',\n      component: HomeView,\n      redirect: \"/home\",\n      //重定向\n      name: \"Manage\",\n      children: []\n    };\n    const menus = user.menus;\n    menus.forEach(item => {\n      if (item.path) {\n        let itemMenu = {\n          path: item.path.replace(\"/\", \"\"),\n          name: item.name,\n          meta: {},\n          component: () => import( /* webpackChunkName: \"about\" */'../views/' + item.component + '.vue')\n        };\n        manageRoute.children.push(itemMenu);\n      } else if (item.children.length > 0) {\n        item.children.forEach(childrenItem => {\n          if (childrenItem.path) {\n            let itemMenu = {\n              path: childrenItem.path.replace(\"/\", \"\"),\n              name: childrenItem.name,\n              meta: {},\n              component: () => import( /* webpackChunkName: \"about\" */'../views/' + childrenItem.component + '.vue')\n            };\n            manageRoute.children.push(itemMenu);\n          }\n        });\n      }\n    });\n    manageRoute.children.push({\n      path: \"person\",\n      name: '个人信息',\n      component: Person\n    });\n    manageRoute.children.push({\n      path: \"updatepwd\",\n      name: '修改密码',\n      component: UpdatePwd\n    });\n    router.addRoute(manageRoute);\n  }\n};\nsetRouters();\nrouter.beforeEach((to, from, next) => {\n  const user = localStorage.getItem(\"user\");\n  if (!to.matched.length) {\n    if (user) {\n      next(\"/404\");\n    } else {\n      next(\"/login\");\n    }\n  }\n  next();\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","HomeView","User","Home","login","register","Person","FilePage","Role","Menu","MenuManager","UpdatePwd","use","routes","path","name","component","router","mode","base","process","env","BASE_URL","resetRouter","matcher","setRouters","curRoutes","getRoutes","map","v","includes","user","JSON","parse","localStorage","getItem","console","log","menus","length","manageRoute","redirect","children","forEach","item","itemMenu","replace","meta","push","childrenItem","addRoute","beforeEach","to","from","next","matched"],"sources":["E:/project/java/SpringBootDemo/vue/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport HomeView from '../views/Manager.vue'\nimport User from \"@/views/User.vue\";\nimport Home from \"@/views/Home.vue\";\nimport login from \"@/views/Login.vue\";\nimport register from \"@/views/Register.vue\";\nimport Person from \"@/views/Person.vue\";\nimport FilePage from \"@/views/FilePage.vue\";\nimport Role from \"@/views/Role.vue\";\nimport {Menu} from \"element-ui\";\nimport MenuManager from \"@/views/MenuManager.vue\";\nimport UpdatePwd from \"@/views/UpdatePwd.vue\";\n\nVue.use(VueRouter)\n\nconst routes = [\n\n    {\n        path: '/about',\n        name: 'about',\n        // route level code-splitting\n        // this generates a separate chunk (about.[hash].js) for this route\n        // which is lazy-loaded when the route is visited.\n        component: () => import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue')\n    },\n    {\n        path: '/login',\n        name: 'login',\n        // route level code-splitting\n        // this generates a separate chunk (about.[hash].js) for this route\n        // which is lazy-loaded when the route is visited.\n        component: login\n    },\n    {\n        path: '/register',\n        name: 'register',\n        // route level code-splitting\n        // this generates a separate chunk (about.[hash].js) for this route\n        // which is lazy-loaded when the route is visited.\n        component: register\n    },\n    {\n        path: '/404',\n        name: '404',\n        // route level code-splitting\n        // this generates a separate chunk (about.[hash].js) for this route\n        // which is lazy-loaded when the route is visited.\n        component: () => import(/* webpackChunkName: \"about\" */ '../views/404.vue')\n    }\n]\n\nconst router = new VueRouter({\n    mode: 'history',\n    base: process.env.BASE_URL,\n    routes\n})\n\nexport const resetRouter=()=>{\n    router.matcher=new VueRouter({\n        mode: 'history',\n        base: process.env.BASE_URL,\n        routes\n    })\n}\n\n//刷新页面会重置路由\nexport const setRouters = () => {\n    const curRoutes = router.getRoutes().map(v => v.name)\n    if (curRoutes.includes(\"Manage\")) {\n        return\n    }\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    console.log(user && user.menus + \"setRouters \")\n    if (user && user.menus.length > 0) {\n        const manageRoute = {\n            path: '/',\n            component: HomeView,\n            redirect: \"/home\",//重定向\n            name: \"Manage\",\n            children: []\n        }\n        const menus = user.menus\n        menus.forEach(item => {\n            if (item.path) {\n                let itemMenu = {\n                    path: item.path.replace(\"/\", \"\"),\n                    name: item.name,\n                    meta: {},\n                    component: () => import(/* webpackChunkName: \"about\" */ '../views/' + item.component + '.vue')\n                }\n                manageRoute.children.push(itemMenu)\n            } else if (item.children.length > 0) {\n                item.children.forEach(childrenItem => {\n                    if (childrenItem.path) {\n                        let itemMenu = {\n                            path: childrenItem.path.replace(\"/\", \"\"),\n                            name: childrenItem.name,\n                            meta: {},\n                            component: () => import(/* webpackChunkName: \"about\" */ '../views/' + childrenItem.component + '.vue')\n                        }\n                        manageRoute.children.push(itemMenu)\n                    }\n                })\n            }\n\n        })\n        manageRoute.children.push({path: \"person\", name: '个人信息', component: Person})\n        manageRoute.children.push({path: \"updatepwd\", name: '修改密码', component: UpdatePwd})\n        router.addRoute(manageRoute)\n\n    }\n}\n\nsetRouters()\nrouter.beforeEach((to, from, next) => {\n   const user= localStorage.getItem(\"user\")\n    if(!to.matched.length){\n        if(user){\n            next(\"/404\")\n        }else{\n            next(\"/login\")\n        }\n    }\n    next()\n})\nexport default router\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,IAAI,MAAM,kBAAkB;AACnC,SAAQC,IAAI,QAAO,YAAY;AAC/B,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,SAAS,MAAM,uBAAuB;AAE7CZ,GAAG,CAACa,GAAG,CAACZ,SAAS,CAAC;AAElB,MAAMa,MAAM,GAAG,CAEX;EACIC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACb;EACA;EACA;EACAC,SAAS,EAAEA,CAAA,KAAM,MAAM,EAAC,+BAAgC,wBAAwB;AACpF,CAAC,EACD;EACIF,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACb;EACA;EACA;EACAC,SAAS,EAAEZ;AACf,CAAC,EACD;EACIU,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChB;EACA;EACA;EACAC,SAAS,EAAEX;AACf,CAAC,EACD;EACIS,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE,KAAK;EACX;EACA;EACA;EACAC,SAAS,EAAEA,CAAA,KAAM,MAAM,EAAC,+BAAgC,kBAAkB;AAC9E,CAAC,CACJ;AAED,MAAMC,MAAM,GAAG,IAAIjB,SAAS,CAAC;EACzBkB,IAAI,EAAE,SAAS;EACfC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ;EAC1BT;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMU,WAAW,GAACA,CAAA,KAAI;EACzBN,MAAM,CAACO,OAAO,GAAC,IAAIxB,SAAS,CAAC;IACzBkB,IAAI,EAAE,SAAS;IACfC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ;IAC1BT;EACJ,CAAC,CAAC;AACN,CAAC;;AAED;AACA,OAAO,MAAMY,UAAU,GAAGA,CAAA,KAAM;EAC5B,MAAMC,SAAS,GAAGT,MAAM,CAACU,SAAS,CAAC,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACd,IAAI,CAAC;EACrD,IAAIW,SAAS,CAACI,QAAQ,CAAC,QAAQ,CAAC,EAAE;IAC9B;EACJ;EACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACrDC,OAAO,CAACC,GAAG,CAACN,IAAI,IAAIA,IAAI,CAACO,KAAK,GAAG,aAAa,CAAC;EAC/C,IAAIP,IAAI,IAAIA,IAAI,CAACO,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;IAC/B,MAAMC,WAAW,GAAG;MAChB1B,IAAI,EAAE,GAAG;MACTE,SAAS,EAAEf,QAAQ;MACnBwC,QAAQ,EAAE,OAAO;MAAC;MAClB1B,IAAI,EAAE,QAAQ;MACd2B,QAAQ,EAAE;IACd,CAAC;IACD,MAAMJ,KAAK,GAAGP,IAAI,CAACO,KAAK;IACxBA,KAAK,CAACK,OAAO,CAACC,IAAI,IAAI;MAClB,IAAIA,IAAI,CAAC9B,IAAI,EAAE;QACX,IAAI+B,QAAQ,GAAG;UACX/B,IAAI,EAAE8B,IAAI,CAAC9B,IAAI,CAACgC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;UAChC/B,IAAI,EAAE6B,IAAI,CAAC7B,IAAI;UACfgC,IAAI,EAAE,CAAC,CAAC;UACR/B,SAAS,EAAEA,CAAA,KAAM,MAAM,EAAC,+BAAgC,WAAW,GAAG4B,IAAI,CAAC5B,SAAS,GAAG,MAAM;QACjG,CAAC;QACDwB,WAAW,CAACE,QAAQ,CAACM,IAAI,CAACH,QAAQ,CAAC;MACvC,CAAC,MAAM,IAAID,IAAI,CAACF,QAAQ,CAACH,MAAM,GAAG,CAAC,EAAE;QACjCK,IAAI,CAACF,QAAQ,CAACC,OAAO,CAACM,YAAY,IAAI;UAClC,IAAIA,YAAY,CAACnC,IAAI,EAAE;YACnB,IAAI+B,QAAQ,GAAG;cACX/B,IAAI,EAAEmC,YAAY,CAACnC,IAAI,CAACgC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;cACxC/B,IAAI,EAAEkC,YAAY,CAAClC,IAAI;cACvBgC,IAAI,EAAE,CAAC,CAAC;cACR/B,SAAS,EAAEA,CAAA,KAAM,MAAM,EAAC,+BAAgC,WAAW,GAAGiC,YAAY,CAACjC,SAAS,GAAG,MAAM;YACzG,CAAC;YACDwB,WAAW,CAACE,QAAQ,CAACM,IAAI,CAACH,QAAQ,CAAC;UACvC;QACJ,CAAC,CAAC;MACN;IAEJ,CAAC,CAAC;IACFL,WAAW,CAACE,QAAQ,CAACM,IAAI,CAAC;MAAClC,IAAI,EAAE,QAAQ;MAAEC,IAAI,EAAE,MAAM;MAAEC,SAAS,EAAEV;IAAM,CAAC,CAAC;IAC5EkC,WAAW,CAACE,QAAQ,CAACM,IAAI,CAAC;MAAClC,IAAI,EAAE,WAAW;MAAEC,IAAI,EAAE,MAAM;MAAEC,SAAS,EAAEL;IAAS,CAAC,CAAC;IAClFM,MAAM,CAACiC,QAAQ,CAACV,WAAW,CAAC;EAEhC;AACJ,CAAC;AAEDf,UAAU,CAAC,CAAC;AACZR,MAAM,CAACkC,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACnC,MAAMvB,IAAI,GAAEG,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACvC,IAAG,CAACiB,EAAE,CAACG,OAAO,CAAChB,MAAM,EAAC;IAClB,IAAGR,IAAI,EAAC;MACJuB,IAAI,CAAC,MAAM,CAAC;IAChB,CAAC,MAAI;MACDA,IAAI,CAAC,QAAQ,CAAC;IAClB;EACJ;EACAA,IAAI,CAAC,CAAC;AACV,CAAC,CAAC;AACF,eAAerC,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}