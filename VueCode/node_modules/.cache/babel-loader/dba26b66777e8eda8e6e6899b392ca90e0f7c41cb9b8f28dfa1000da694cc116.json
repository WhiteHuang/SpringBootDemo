{"ast":null,"code":"export default {\n  name: \"MenuManager\",\n  data() {\n    return {\n      tableData: [],\n      multipleSelection: [],\n      total: 0,\n      pageNum: 1,\n      pageSize: 5,\n      name: \"\",\n      description: \"\",\n      dialogFormVisible: false,\n      form: {},\n      options: []\n    };\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    load() {\n      // fetch(\"http://localhost:9090/menu/page?pageNum=\"+this.pageNum+\"&pageSize=\"+this.pageSize+\"&username=\"+this.username)\n      //     .then(res=>res.json())\n      //     .then(res=> {\n      //           console.log(res)\n      //           this.tableData=res.data\n      //           this.total=res.total\n      //         }\n      //     )\n      this.request.get(\"/menu\", {\n        params: {\n          // pageNum: this.pageNum,\n          // pageSize: this.pageSize,\n          // name: this.name,\n          // description: this.description,\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data;\n          console.log(res.data);\n          // this.total = res.data.total\n        }\n      });\n    },\n    handleAdd() {\n      this.dialogFormVisible = true;\n      this.form = {};\n    },\n    handleEdit(row) {\n      this.dialogFormVisible = true;\n      this.form = JSON.parse(JSON.stringify(row));\n      this.loadIcons();\n    },\n    addChilren(row) {\n      this.dialogFormVisible = true;\n      this.form = {};\n      this.form.pid = row.id;\n      this.loadIcons();\n    },\n    loadIcons() {\n      this.request.get(\"/menu/icons\").then(res => {\n        if (res.code === '200') {\n          this.options = res.data;\n        }\n      });\n    },\n    handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    reset() {\n      this.name = \"\";\n      this.description = \"\";\n      this.load();\n    },\n    save() {\n      console.log(this.form);\n      this.request.post(\"/menu\", this.form).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"分配成功！\");\n          this.dialogFormVisible = false;\n          this.load();\n        } else {\n          this.$message.error(\"分配失败！\");\n        }\n      });\n    },\n    del(id) {\n      this.request.delete(\"/menu/\" + id).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"删除成功！\");\n          this.load();\n        } else {\n          this.$message.error(\"删除失败！\");\n        }\n      });\n    },\n    delBatch() {\n      if (this.multipleSelection.length > 0) {\n        let ids = this.multipleSelection.map(v => v.id);\n        this.request.post(\"/menu/del/batch\", ids).then(res => {\n          if (res.code === '200') {\n            this.$message.success(\"批量删除成功！\");\n            this.load();\n            this.multipleSelection = [];\n          } else {\n            this.$message.error(\"批量删除失败！\");\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","multipleSelection","total","pageNum","pageSize","description","dialogFormVisible","form","options","created","load","methods","request","get","params","then","res","code","console","log","handleAdd","handleEdit","row","JSON","parse","stringify","loadIcons","addChilren","pid","id","handleSelectionChange","val","reset","save","post","$message","success","error","del","delete","delBatch","length","ids","map","v"],"sources":["src/views/MenuManager.vue"],"sourcesContent":["<script>\r\nexport default {\r\n  name: \"MenuManager\",\r\n  data() {\r\n    return {\r\n      tableData: [],\r\n      multipleSelection: [],\r\n      total: 0,\r\n      pageNum: 1,\r\n      pageSize: 5,\r\n      name: \"\",\r\n      description: \"\",\r\n      dialogFormVisible: false,\r\n      form: {},\r\n      options:[]\r\n    }\r\n  },\r\n  created() {\r\n    this.load()\r\n  },\r\n  methods: {\r\n    load() {\r\n      // fetch(\"http://localhost:9090/menu/page?pageNum=\"+this.pageNum+\"&pageSize=\"+this.pageSize+\"&username=\"+this.username)\r\n      //     .then(res=>res.json())\r\n      //     .then(res=> {\r\n      //           console.log(res)\r\n      //           this.tableData=res.data\r\n      //           this.total=res.total\r\n      //         }\r\n      //     )\r\n      this.request.get(\"/menu\", {\r\n        params: {\r\n          // pageNum: this.pageNum,\r\n          // pageSize: this.pageSize,\r\n          // name: this.name,\r\n          // description: this.description,\r\n        }\r\n      })\r\n          .then(res => {\r\n            if (res.code === '200') {\r\n              this.tableData = res.data\r\n              console.log(res.data)\r\n              // this.total = res.data.total\r\n            }\r\n          })\r\n    },\r\n    handleAdd() {\r\n      this.dialogFormVisible = true\r\n      this.form = {}\r\n    },\r\n    handleEdit(row) {\r\n      this.dialogFormVisible = true\r\n      this.form = JSON.parse(JSON.stringify(row))\r\n      this.loadIcons()\r\n    },\r\n    addChilren(row) {\r\n      this.dialogFormVisible = true\r\n      this.form = {}\r\n      this.form.pid = row.id;\r\n      this.loadIcons()\r\n    },\r\n\r\n    loadIcons(){\r\n      this.request.get(\"/menu/icons\").then(res=>{\r\n        if(res.code==='200'){\r\n          this.options=res.data\r\n        }\r\n      })\r\n    },\r\n\r\n\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val\r\n    },\r\n\r\n    reset() {\r\n      this.name = \"\"\r\n      this.description = \"\"\r\n      this.load()\r\n    },\r\n    save() {\r\n      console.log(this.form)\r\n      this.request.post(\"/menu\", this.form)\r\n          .then(res => {\r\n            if (res.code === '200') {\r\n              this.$message.success(\"分配成功！\")\r\n              this.dialogFormVisible = false\r\n              this.load()\r\n            } else {\r\n              this.$message.error(\"分配失败！\")\r\n            }\r\n          })\r\n    },\r\n\r\n    del(id) {\r\n      this.request.delete(\"/menu/\" + id).then(res => {\r\n        if (res.code === '200') {\r\n          this.$message.success(\"删除成功！\")\r\n          this.load()\r\n        } else {\r\n          this.$message.error(\"删除失败！\")\r\n        }\r\n      })\r\n    },\r\n\r\n    delBatch() {\r\n      if (this.multipleSelection.length > 0) {\r\n        let ids = this.multipleSelection.map(v => v.id)\r\n        this.request.post(\"/menu/del/batch\", ids).then(\r\n            res => {\r\n              if (res.code === '200') {\r\n                this.$message.success(\"批量删除成功！\")\r\n                this.load()\r\n                this.multipleSelection = []\r\n              } else {\r\n                this.$message.error(\"批量删除失败！\")\r\n              }\r\n            }\r\n        )\r\n      }\r\n\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n\r\n\r\n    <div style=\"margin: 10px 0\">\r\n      <el-input style=\"width:200px\" placeholder=\"请输入名称\" suffix-icon=\"el-icon-search\" class=\"ml-5\"\r\n                v-model=\"name\"></el-input>\r\n      <el-input style=\"width:200px\" placeholder=\"请输入描述\" suffix-icon=\"el-icon-message\" class=\"ml-5\"\r\n                v-model=\"description\"></el-input>\r\n      <el-button class=\"ml-5\" type=\"primary\" @click=\"load\">搜索</el-button>\r\n      <el-button class=\"ml-5\" type=\"warning\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n\r\n    <div style=\"margin: 10px 0\">\r\n      <el-button class=\"ml-5\" type=\"primary\" @click=\"handleAdd\">新增 <i class=\"el-icon-circle-plus-outline\"></i>\r\n      </el-button>\r\n      <el-popconfirm\r\n          class=\"ml-5\"\r\n          confirm-button-text='好的'\r\n          cancel-button-text='不用了'\r\n          icon=\"el-icon-info\"\r\n          icon-color=\"red\"\r\n          @confirm=\"delBatch\"\r\n          title=\"确定批量删除吗？\">\r\n        <el-button class=\"ml-5\" type=\"danger\" slot=\"reference\">批量删除 <i class=\"el-icon-delete\"></i></el-button>\r\n      </el-popconfirm>\r\n\r\n    </div>\r\n\r\n    <el-table :data=\"tableData\" border stripe\r\n              :header-cell-style=\"{background:'#eef1f6',color:'#606266'}\"\r\n              @selection-change=\"handleSelectionChange\" row-key=\"id\" default-expand-all\r\n    >\r\n      <el-table-column\r\n          type=\"selection\"\r\n          width=\"55\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"id\" label=\"ID\" width=\"80px\"></el-table-column>\r\n      <el-table-column prop=\"name\" label=\"名称\"></el-table-column>\r\n      <el-table-column prop=\"path\" label=\"路径\"></el-table-column>\r\n      <el-table-column prop=\"component\" label=\"页面组件\"></el-table-column>\r\n      <el-table-column prop=\"icon\" label=\"图标\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <i :class=\"scope.row.icon\" style=\"font-size: 25px\"/>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"description\" label=\"描述\"></el-table-column>\r\n      <el-table-column label=\"操作\">\r\n        <template slot-scope=\"scope\">\r\n\r\n          <el-button type=\"primary\" @click=\"addChilren(scope.row)\" v-if=\"scope.row.path===''\">新增子菜单 <i\r\n              class=\"el-icon-plus\"></i></el-button>\r\n          <el-button type=\"success\" @click=\"handleEdit(scope.row)\">编辑 <i class=\"el-icon-edit\"></i></el-button>\r\n          <el-popconfirm\r\n              class=\"ml-5\"\r\n              confirm-button-text='好的'\r\n              cancel-button-text='不用了'\r\n              icon=\"el-icon-info\"\r\n              icon-color=\"red\"\r\n              @confirm=\"del(scope.row.id)\"\r\n              title=\"确定删除吗？\">\r\n            <el-button type=\"danger\" slot=\"reference\">删除 <i class=\"el-icon-delete\"></i></el-button>\r\n          </el-popconfirm>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n\r\n    <el-dialog title=\"菜单信息\" :visible.sync=\"dialogFormVisible\" width=\"30%\">\r\n      <el-form label-width=\"90px\" size=\"medium\">\r\n        <el-form-item label=\"名称\">\r\n          <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"路径\">\r\n          <el-input v-model=\"form.path\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"页面组件\">\r\n          <el-input v-model=\"form.component\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"图标\">\r\n          <template slot-scope=\"scope\">\r\n            <el-select clearable v-model=\"form.icon\" placeholder=\"请选择\" style=\"width: 100%\">\r\n              <el-option v-for=\"item in options\" :key=\"item.name\" :label=\"item.name\" :value=\"item.value\">\r\n                <i :class=\"item.value\"/> {{item.name}}\r\n              </el-option>\r\n            </el-select>\r\n          </template>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\">\r\n          <el-input v-model=\"form.description\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.headerBg {\r\n  background-color: #222 !important;\r\n}\r\n</style>"],"mappings":"AACA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,iBAAA;MACAC,KAAA;MACAC,OAAA;MACAC,QAAA;MACAN,IAAA;MACAO,WAAA;MACAC,iBAAA;MACAC,IAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACAD,KAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,KAAAE,OAAA,CAAAC,GAAA;QACAC,MAAA;UACA;UACA;UACA;UACA;QAAA;MAEA,GACAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAjB,SAAA,GAAAgB,GAAA,CAAAjB,IAAA;UACAmB,OAAA,CAAAC,GAAA,CAAAH,GAAA,CAAAjB,IAAA;UACA;QACA;MACA;IACA;IACAqB,UAAA;MACA,KAAAd,iBAAA;MACA,KAAAC,IAAA;IACA;IACAc,WAAAC,GAAA;MACA,KAAAhB,iBAAA;MACA,KAAAC,IAAA,GAAAgB,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,SAAA,CAAAH,GAAA;MACA,KAAAI,SAAA;IACA;IACAC,WAAAL,GAAA;MACA,KAAAhB,iBAAA;MACA,KAAAC,IAAA;MACA,KAAAA,IAAA,CAAAqB,GAAA,GAAAN,GAAA,CAAAO,EAAA;MACA,KAAAH,SAAA;IACA;IAEAA,UAAA;MACA,KAAAd,OAAA,CAAAC,GAAA,gBAAAE,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAT,OAAA,GAAAQ,GAAA,CAAAjB,IAAA;QACA;MACA;IACA;IAGA+B,sBAAAC,GAAA;MACA,KAAA9B,iBAAA,GAAA8B,GAAA;IACA;IAEAC,MAAA;MACA,KAAAlC,IAAA;MACA,KAAAO,WAAA;MACA,KAAAK,IAAA;IACA;IACAuB,KAAA;MACAf,OAAA,CAAAC,GAAA,MAAAZ,IAAA;MACA,KAAAK,OAAA,CAAAsB,IAAA,eAAA3B,IAAA,EACAQ,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAkB,QAAA,CAAAC,OAAA;UACA,KAAA9B,iBAAA;UACA,KAAAI,IAAA;QACA;UACA,KAAAyB,QAAA,CAAAE,KAAA;QACA;MACA;IACA;IAEAC,IAAAT,EAAA;MACA,KAAAjB,OAAA,CAAA2B,MAAA,YAAAV,EAAA,EAAAd,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAkB,QAAA,CAAAC,OAAA;UACA,KAAA1B,IAAA;QACA;UACA,KAAAyB,QAAA,CAAAE,KAAA;QACA;MACA;IACA;IAEAG,SAAA;MACA,SAAAvC,iBAAA,CAAAwC,MAAA;QACA,IAAAC,GAAA,QAAAzC,iBAAA,CAAA0C,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAf,EAAA;QACA,KAAAjB,OAAA,CAAAsB,IAAA,oBAAAQ,GAAA,EAAA3B,IAAA,CACAC,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YACA,KAAAkB,QAAA,CAAAC,OAAA;YACA,KAAA1B,IAAA;YACA,KAAAT,iBAAA;UACA;YACA,KAAAkC,QAAA,CAAAE,KAAA;UACA;QACA,CACA;MACA;IAEA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}